/* Script generated by Pawn Studio */

#include <amxmodx>
#include <amxmisc>

#define PLUGIN	"Menu"
#define AUTHOR	"Vacko"
#define VERSION	"1.0"

#define MAX_PLAYERS 33
new g_MenuPlayersCallback;
new g_zprava[MAX_PLAYERS][64];

new tmpid, relid;


stock register_saycmd(saycommand[], function[]) 
{
    static sTemp[64]
    formatex(sTemp, sizeof sTemp - 1, "say /%s", saycommand)
    register_clcmd(sTemp, function)
    formatex(sTemp, sizeof sTemp - 1, "say .%s", saycommand)
    register_clcmd(sTemp, function)
    formatex(sTemp, sizeof sTemp - 1, "say_team /%s", saycommand)
    register_clcmd(sTemp, function)
    formatex(sTemp, sizeof sTemp - 1, "say_team .%s", saycommand)
    register_clcmd(sTemp, function)
}

public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR)	
	
	register_clcmd("_zprava", "cmd_zprava", -1, "");
	register_saycmd("menu", "MainMenu");
	register_saycmd("zprava", "PlayerMenu");

	g_MenuPlayersCallback = menu_makecallback( "menuplayers_callback" );
}

public MainMenu(id)
 {
   new menu = menu_create("\rMenu \y(/menu)", "menu_handler")

   menu_additem(menu, "\yVIP vyhody",       "m1");
   menu_additem(menu, "\wInformace",        "m2");
   menu_additem(menu, "\wRadio",            "m7");
   menu_additem(menu, "\wPoslat zpravu^n",  "m3");
   menu_additem(menu, "\wDalsi servery",    "m4");
   menu_additem(menu, "\wTeamSpeak",        "m5");
   menu_additem(menu, "\wVoteban",          "m6");    
   
   menu_setprop(menu, MPROP_EXIT, MEXIT_ALL);
   menu_display(id, menu, 0);
 }
 
 
  public StatsMenu(id)
 {
   new menu = menu_create("\rStats Menu \y(/menu)", "menu_handler")

   menu_additem(menu, "\w/rank",       "s1");
   menu_additem(menu, "\w/top15",      "s2");
   menu_additem(menu, "\w/rankstats",  "s3");
   menu_additem(menu, "\w/statsme",    "s4");
   menu_additem(menu, "\w/stats^n",    "s5");
   menu_additem(menu, "\wZpet",        "s6");
   
   menu_setprop(menu, MPROP_EXIT, MEXIT_ALL);
   menu_display(id, menu, 0);
 }
 
 
  public VipMenu(id)
 {
   new menu = menu_create("\rVip Menu \y(/vip)", "menu_handler")

   menu_additem(menu, "\yZobrazit VIP vyhody", "v1");
   menu_additem(menu, "\rAktivovat^n",         "v2"); 
   menu_additem(menu, "\wPoradna",             "v3");
   menu_additem(menu, "\wVypsat VIP hrace^n",  "v4");
   menu_additem(menu, "Zpet",                  "v5"); 
 
   menu_setprop(menu, MPROP_EXIT, MEXIT_ALL);
   menu_display(id, menu, 0);
 }
 
 
   public InfoMenu(id)
 {
   new menu = menu_create("\rMenu \y(/menu)", "menu_handler")

   menu_additem(menu, "\wStatistiky", "i1");
   menu_additem(menu, "\wPravidla",   "i2"); 
   menu_additem(menu, "\wPrikazy",    "i3");
   menu_additem(menu, "\yAdmini^n",   "i4");
   menu_additem(menu, "\rBanlist^n",  "i5");
   menu_additem(menu, "\wZpet",       "i6");
   
   menu_setprop(menu, MPROP_EXIT, MEXIT_ALL);
   menu_display(id, menu, 0);
 }
 
 
 public PlayerMenu(id)
 {
 	new menu = menu_create("\rPoslat zpravu \y(/zprava) :", "playermenu_handler");
	
    new players[32], pnum, tempid;
    new szName[32], szTempid[10];
    get_players(players, pnum);

    for( new i; i<pnum; i++ )
    {
        tempid = players[i];
        get_user_name(tempid, szName, charsmax(szName));
        num_to_str(tempid, szTempid, charsmax(szTempid));
        menu_additem(menu, szName, szTempid, 0, g_MenuPlayersCallback);
    }

    menu_display(id, menu, 0);
 }
 

 public menu_handler(id, menu, item)
 {
    if( item == MENU_EXIT )
    {
        menu_destroy(menu);
        return PLUGIN_HANDLED;
    }

    new data[6], szName[64];
    new access, callback;
    menu_item_getinfo(menu, item, access, data,charsmax(data), szName,charsmax(szName), callback);
    new key = str_to_num(data[1]);
    switch( data[0] )
    {
        case 'm':
        {
            switch( key )
            {
                case 1:
                {
                    show_motd(id, "motd_vip.txt", "[GT] GameTeam.cz VIP");
					MainMenu(id);
				    //VipMenu(id);
                }
                case 2:
                {
                    InfoMenu(id);
                }
                case 3:
                {
                    PlayerMenu(id);
                }
                case 4:
                {
                    client_cmd(id, "say /server");
                }
                case 5:
                {
                    show_motd(id, "motd_teamspeak.txt", "[GT] GameTeam.cz TeamSpeak");
					MainMenu(id);
                }	
                case 6:
                {
                    client_cmd(id, "say /voteban");
                }
                case 7:
                {
                    client_cmd(id, "say /radio");
                }								
            }
        }
        case 'v':
        {
            switch( key )
            {
                case 1:
                {
                   show_motd(id, "vipvyhody.txt", "[GT] gameteam.cz VIP vyhody");
				   VipMenu(id);
                }
                case 2:
                {
                   show_motd(id, "vip.txt", "[GT] gameteam.cz VIP aktivace");
				   VipMenu(id);
                }
                case 3:
                {
                   show_motd(id, "vipporadna.txt", "[GT] gameteam.cz VIP poradna");
				   VipMenu(id);
                }
                case 4:
                {
                   client_cmd(id, "say /vips");
				   VipMenu(id);
                }	
                case 5:
                {
                   MainMenu(id);
                }		
			  
            }
        }
        case 'i':
        {
            switch( key )
            {
                case 1:
                {
                    StatsMenu(id);
                }
                case 2:
                {
                   show_motd(id, "motd_rules.txt", "[GT] GameTeam.cz Pravidla");
				   InfoMenu(id);                  
                }
                case 3:
                {
                   show_motd(id, "motd_commands.txt", "[GT] GameTeam.cz Prikazy");
				   InfoMenu(id); 
                }
                case 4:
                {
                   show_motd(id, "motd_admins.txt", "[GT] GameTeam.cz Admin Team");
				   InfoMenu(id); 
                }
                case 5:
                {
                   show_motd(id, "motd_banlist.txt", "[GT] GameTeam.cz Banlist");
				   InfoMenu(id); 
                }	
                case 6:
                {
                   MainMenu(id);
                }			
            }
        }		
        case 's':
        {
            switch( key )
            {
                case 1:
                {
				   client_cmd(id, "say /rank");
                   StatsMenu(id);
                }
                case 2:
                {
                   client_cmd(id, "say /top15"); 
				   StatsMenu(id);                  
                }
                case 3:
                {
                   client_cmd(id, "say /rankstats");  
				   StatsMenu(id); 
                }
                case 4:
                {
                   client_cmd(id, "say /statsme");
				   StatsMenu(id); 
                }
                case 5:
                {
                   client_cmd(id, "say /stats");
				   menu_destroy(menu); 
                }			
                case 6:
                {
				   InfoMenu(id); 
                }					
            }
        }		
		
    }

    menu_destroy(menu);
    return PLUGIN_HANDLED;
 }
 
public cmd_zprava(id, tempid)
{
	new szArgs[64];
	
	read_argv(1, szArgs, charsmax(szArgs));
	
	if(szArgs[0])
	{
		formatex(g_zprava[id], charsmax(g_zprava[]), szArgs);
	}
	
	new Name[32];
	new MName[32];
	
	get_user_name(relid, Name, charsmax(Name));
	get_user_name(tmpid, MName, charsmax(MName));	
	
	if (tmpid != relid){
	  client_print(tmpid, print_chat, "----[PM] Zprava od : %s ----", Name);
	  client_print(tmpid, print_chat, "----[PM] %s", g_zprava[id]);
	  client_print(tmpid, print_chat, "----[PM] Zprava od : %s ----", Name);
	  client_print(relid, print_chat, "----[PM] Zprava odeslana : %s ----", MName);
	}else{
	  client_print(relid, print_chat, "----[PM] Nemuzes poslat PM zpravu sam sobe ----");
	}
	
	relid = 0;
	tmpid = 0;
	
	
	return PLUGIN_HANDLED;
}

 
public menuplayers_callback(id, menu, item)
 {
    new data[6], szName[64];
    new access, callback;

    menu_item_getinfo(menu, item, access, data,charsmax(data), szName,charsmax(szName), callback);

    new tempid = str_to_num(data);
	
    return ITEM_ENABLED;
 }
 
public playermenu_handler(id, menu, item)
 {
	
    if( item == MENU_EXIT )
    {
        menu_destroy(menu);
        return PLUGIN_HANDLED;
    }

    new data[6], szName[64];
	new Name[32];
	new MName[32];
    new access, callback;

    menu_item_getinfo(menu, item, access, data,charsmax(data), szName,charsmax(szName), callback);

    new tempid = str_to_num(data);
	
	tmpid = tempid;
	relid = id;
	
	client_cmd(id, "messagemode _zprava");
	
    menu_destroy(menu);
	
    return PLUGIN_HANDLED;
 }

 